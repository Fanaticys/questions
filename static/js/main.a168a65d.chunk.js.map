{"version":3,"sources":["QuestionRadios.js","QuestionTitle.js","Question.js","Questions.js","QuestionsForm.js","actions/forms.js","App.js","reducers/index.js","store/index.js","index.js"],"names":["styles","container","marginTop","yes","&$checked","color","green","no","red","checked","radioGroup","display","justifyContent","width","label","fontSize","QuestionRadios","_this$props","this","props","classes","value","onChange","react_default","a","createElement","Grid_default","className","justify","item","xs","RadioGroup_default","row","FormControlLabel_default","control","Radio_default","root","labelPlacement","middle","React","Component","withStyles","QuestionTitle","title","Typography_default","variant","Question","index","data","_this$props$input","input","concat","src_QuestionTitle","src_QuestionRadios","Divider_default","divider","theme","Questions","react","map","question","Field","key","id","name","component","QuestionsForm","handleSubmit","Paper_default","paper","onSubmit","src_Questions","Button_default","button","type","compose","connect","values","console","log","reduxForm","form","margin","extendedIcon","marginRight","spacing","unit","flexGrow","padding","maxWidth","App","src_QuestionsForm","combineReducers","formReducer","logger","createLogger","collapsed","enhance","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a168a65d.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst styles = {\n  container: {\n    marginTop: 10,\n  },\n  yes: { \n    '&$checked': {\n      color: green[500],\n    },\n  },\n  no: {\n    '&$checked': {\n      color: red[500],\n    },\n  },\n  checked: {},\n  radioGroup: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  label: {\n    fontSize: 14,\n  }\n};\n\nclass QuestionRadios extends React.Component {\n  render() {\n    const { classes, value, onChange } = this.props;\n\n    return (\n      <Grid container className={classes.container} justify='center'>\n        <Grid container item xs={6}>\n          <RadioGroup\n            value={value}\n            onChange={onChange}\n            className={classes.radioGroup}\n            row\n          >\n            <FormControlLabel\n              value=\"yes\"\n              control={<Radio \n                classes={{\n                  root: classes.yes,\n                  checked: classes.checked,\n                }}\n              />}\n              label=\"Да\"\n              labelPlacement=\"start\"\n              className={classes.label}\n            />\n            <FormControlLabel\n              value=\"no\"\n              control={<Radio\n                classes={{\n                  root: classes.no,\n                  checked: classes.checked,\n                }}\n              />}\n              className={classes.middle}\n              label=\"Нет\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              value=\"do not know\"\n              control={<Radio color=\"default\" />}\n              label=\"Не знаю\"\n              labelPlacement=\"start\"\n            />\n          </RadioGroup>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(QuestionRadios);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = () => ({\n  title: {\n    fontSize: 16,\n  }\n});\n\nclass QuestionTitle extends Component {\n  render() {\n    const { classes, title } = this.props;\n    return (\n      <Typography variant='display3' className={classes.title}>\n        {title}\n      </Typography>\n    )\n  }\n}\n\nexport default withStyles(styles)(QuestionTitle);","import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport QuestionRadios from './QuestionRadios';\nimport QuestionTitle from './QuestionTitle';\n\nconst styles = theme => ({\n  container: {\n    marginTop: 20,\n  },\n  divider: {\n    marginTop: 10,\n  }\n});\n\nclass Question extends Component {\n  render() {\n    const { classes, index, data, input: { onChange, value } } = this.props;    \n    const title = `${index}. ${data.value}`;\n\n    return (\n      <div className={classes.container}>\n        <QuestionTitle title={title} />\n        <QuestionRadios\n          onChange={onChange}\n          value={value}\n        />\n        <Divider className={classes.divider} />\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Question);","import React, { Component, Fragment } from 'react';\nimport { Field } from 'redux-form';\nimport Question from './Question';\n\nclass Questions extends Component {\n  render() {\n    const { data } = this.props;\n    \n    return (\n      <Fragment>\n        {data.map((question, index) => (\n          <Field\n            key={question.id}\n            index={++index}\n            name={`id:${question.id}`}\n            component={Question}\n            data={question}\n          />\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default Questions;\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { submitQuestionsForm } from './actions/forms';\n\nimport Questions from './Questions';\nimport data from './questions.json';\nimport { reduxForm } from 'redux-form';\n\nconst styles = theme => ({\n  margin: {\n    justifyContent: 'center',\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    margin: 'auto',\n    marginTop: 10,\n    maxWidth: 800,\n  },\n  button: {\n    margin: '0 auto',\n    marginTop: 20,\n  }\n});\n\nclass QuestionsForm extends Component {\n  render() {\n    const { handleSubmit, classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <form onSubmit={handleSubmit}>\n            <Questions data={data} />\n            <Grid container justify='space-between'>\n              <Button\n                variant=\"contained\"\n                className={classes.button}\n                type='submit'\n              >\n                отправить\n              </Button>\n            </Grid>\n          </form>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default compose(\n  connect(null, { onSubmit: submitQuestionsForm }),\n  reduxForm({\n    form: 'questions',\n  }),\n  withStyles(styles),\n)(QuestionsForm);","export const submitQuestionsForm = values => () => {\n  console.log(values);\n};","import React, { Component } from 'react';\nimport QuestionsForm from './QuestionsForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <QuestionsForm />\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { reducer as formReducer } from 'redux-form'\n\nexport default combineReducers({ form: formReducer });","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport reducer from '../reducers';\n\nconst logger = createLogger({\n    collapsed: true\n});\n\nconst enhance = applyMiddleware(thunk, logger);\nconst composeEnhancers = window && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nconst store = createStore(\n    reducer,\n    composeEnhancers(enhance),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}